{"version":3,"sources":["Header/index.js","Form/index.js","Buttons/index.js","Tasks/index.js","Section/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","autoFocus","value","placeholder","onChange","target","Buttons","tasks","hideDone","toggleHideDone","setAllDone","length","onClick","disabled","every","done","Tasks","removeTask","toggleTaskDone","map","task","id","content","Section","extraHeaderContent","body","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d361023d.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header className=\"header\">\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        autoFocus\r\n        value={newTaskContent}\r\n        className=\"form__input\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <button className=\"form__button\">Dodaj zadanie</button>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  tasks.length > 0 && (\r\n    <div className=\"buttons\">\r\n      <button\r\n        onClick={toggleHideDone}\r\n        className={`buttons__button`}\r\n      >\r\n        {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n      </button>\r\n      <button\r\n        onClick={setAllDone}\r\n        className={`buttons__button`}\r\n        disabled={tasks.every(({ done }) => done)}\r\n      >\r\n        UkoÅ„cz wszystkie\r\n      </button>\r\n    </div>\r\n  )\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <ul className=\"tasks\">\r\n    {tasks.map(task => (\r\n      <li\r\n        key={task.id}\r\n        className={`tasks__item ${task.done && hideDone ? \"tasks__item--hidden\" : \"\"}`}\r\n      >\r\n        <button\r\n          onClick={() => toggleTaskDone(task.id)}\r\n          className={`tasks__button tasks__button--done`}\r\n        >\r\n          <span>{task.done ? \"âœ”\" : \"\"}</span>\r\n        </button>\r\n        <span\r\n          className={`\r\n            tasks__span ${task.done ? \" tasks__span--done\" : \"\"} \r\n          `}\r\n        >\r\n          {task.content}\r\n        </span>\r\n        <button\r\n          onClick={() => removeTask(task.id)}\r\n          className={`tasks__button tasks__button--remove`}\r\n        >\r\n          ðŸ—‘\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n  <section className=\"section\">\r\n    <header className=\"section__header\">\r\n      <h2 className=\"section__title\">{title}</h2>\r\n      {extraHeaderContent}\r\n    </header>\r\n    <div className=\"section__body\">\r\n      {body}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Section;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className=\"container\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Container;","import { useState } from \"react\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Buttons from \"./Buttons\";\nimport Tasks from \"./Tasks\";\nimport Section from \"./Section\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([\n    { id: 1, content: \"przejÅ›Ä‡ na Reacta\", done: false },\n    { id: 2, content: \"zjeÅ›Ä‡ Å›niadanie\", done: true },\n  ]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(tasks => tasks.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          done: !task.done,\n        };\n      }\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })))\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      }\n    ])\n  };\n\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadaÅ„\"\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />}\n      />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}