{"version":3,"sources":["common/Header/styled.js","common/Header/index.js","common/Section/styled.js","common/Section/index.js","styled.js","features/author/styled.js","features/author/AuthorPage.js","features/tasks/localeStorage.js","features/tasks/tasksSlice.js","features/tasks/TasksPage/Form/styled.js","features/tasks/TasksPage/Input/index.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/Buttons/styled.js","features/tasks/TasksPage/Button/index.js","features/tasks/TasksPage/Buttons/index.js","features/tasks/TasksPage/TasksList/styled.js","features/tasks/TasksPage/searchQueryParamName.js","features/tasks/TasksPage/TasksList/index.js","features/tasks/TasksPage/Search/styled.js","features/tasks/TasksPage/Search/index.js","features/tasks/TasksPage/queryParameters.js","features/tasks/TasksPage/ExampleTaskButton/index.js","features/tasks/TasksPage/index.js","features/tasks/TaskPage/index.js","App.js","reportWebVitals.js","globalStyle.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","rootSaga.js","store.js","index.js","theme.js"],"names":["MainHeader","styled","header","Header","title","SectionWrapper","section","theme","color","white","alto","breakPoint","mobileMax","Title","h2","Body","div","Section","extraHeaderContent","body","activeClassName","Wrapper","List","ul","teal","Item","li","StyledNavLink","NavLink","attrs","Paragraph","p","Link","a","AuthorPage","target","href","localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","parse","getItem","hideDone","loading","reducers","addTask","task","payload","push","removeTask","taskId","index","findIndex","id","splice","toggleHideDone","state","toggleTaskDone","done","setAllDone","forEach","fetchExampleTasks","fetchExampleTasksSuccess","fetchExampleTasksError","actions","selectTasksState","selectTasks","selectHideDone","selectAreTaskEmpty","length","selectIsEveryTaskDone","every","selectExampleTaskLoading","StyledForm","form","Button","button","input","Form","useState","newTaskContent","setNewTaskContent","dispatch","useDispatch","inputRef","useRef","focusInput","current","focus","onSubmit","event","preventDefault","trimmedNewTaskConetent","trim","content","nanoid","Input","value","placeholder","onChange","ref","autoFocus","onClick","silver","Buttons","areTaskEmpty","useSelector","isEveryTaskDone","disabled","hidden","css","Content","span","toggleDone","forestGreen","remove","crimson","StyledLink","searchQueryParamName","TasksList","location","useLocation","query","URLSearchParams","search","get","filter","toUpperCase","includes","selectTaskByQuery","map","to","Search","key","useQueryParameter","replaceQueryParameter","history","useHistory","searchParams","undefined","delete","set","pathname","toString","useReplaceQueryParameter","ExampleTaskButton","TasksPage","TaskPage","useParams","find","getTaskById","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","gallery","getExampleTasks","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","saveTaskInLocalStorageHandler","tasksSaga","delay","call","exampleTasks","put","alert","select","takeLatest","type","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","ReactDOM","render","StrictMode","black","document","getElementById"],"mappings":"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","file":"static/js/main.7a9ee27f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MainHeader = styled.header`\r\n  margin: 10px 0;\r\n`;","import { MainHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <MainHeader>\r\n    <h1>{title}</h1>\r\n  </MainHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const SectionWrapper = styled.section`\r\n  margin: 10px 0;\r\n  background: ${({ theme }) => theme.color.white};\r\n  box-shadow:  0 0 5px ${({ theme }) => theme.color.alto};;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  border-bottom: 1px solid ${({ theme }) => theme.color.alto};;\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 20px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  padding: 20px;\r\n`;","import { SectionWrapper, Header, Title, Body } from \"./styled\";\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n  <SectionWrapper>\r\n    <Header>\r\n      <Title>{title}</Title>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <Body>\r\n      {body}\r\n    </Body>\r\n  </SectionWrapper>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst activeClassName = \"active\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: 900px;\r\n\tmargin: 0 auto;\r\n\tpadding: 20px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n\tbackground-color: ${({ theme }) => theme.color.teal};\r\n\tlist-style: none;\r\n\tmargin: 0px;\r\n\tpadding: 0px;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n\t\t\tfont-size: 18px;\r\n\t\t\tpadding: 20px;\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n\tactiveClassName,\r\n}))`\r\n\tcolor:  ${({ theme }) => theme.color.white}; \r\n\ttext-decoration: none;\r\n\t&.${activeClassName} {\r\n\t\t\t\r\n\t\t\tfont-weight: bold;\r\n\t}\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Paragraph = styled.p`\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.color.teal};\r\n`;","import Header from \"../../common/Header\";\r\nimport Section from \"../../common/Section\";\r\nimport { Wrapper } from \"../../styled\";\r\nimport { Paragraph, Link } from \"./styled\";\r\n\r\nconst AuthorPage = () => (\r\n  <Wrapper>\r\n    <Header title=\"O autorze\" />\r\n    <Section\r\n      title=\"Paweł Urbanowski - kilka słów o mnie...\"\r\n      body={<>\r\n        <Paragraph>\r\n          Absolwent <strong>informatyki</strong>, obecny uczestnik kursu Front-end developera na platformie <strong>Youcode</strong>. Szukam pomysłu na przyszłość, stąd próba sił w tworzeniu stron internetowych.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          Poza nauką, gitarzysta basowy oraz fan siatkówki. W czasie wolnym lubię gotować, oglądać seriale oraz jeździć na rolkach.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          Jeśli chcesz spojrzeć na inne moje projekty, zapraszam Cię <Link target=\"_blank\" href=\"https://github.com/palel\">tutaj</Link>.\r\n        </Paragraph>\r\n      </>}\r\n    />\r\n  </Wrapper>\r\n);\r\n\r\nexport default AuthorPage;","const localStorageKey = \"tasks\";\r\n\r\nexport const saveTasksInLocalStorage = tasks => localStorage.setItem(localStorageKey, JSON.stringify(tasks));\r\n\r\nexport const getTasksFromLocalStorage = () => JSON.parse(localStorage.getItem(localStorageKey)) || [];","import { createSlice } from '@reduxjs/toolkit';\r\nimport { getTasksFromLocalStorage } from './localeStorage';\r\n\r\nconst tasksSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState: {\r\n    tasks: getTasksFromLocalStorage(),\r\n    hideDone: false,\r\n    loading: false,\r\n  },\r\n  reducers: {\r\n    addTask: ({ tasks }, { payload: task }) => {\r\n      tasks.push(task);\r\n    },\r\n    removeTask: ({ tasks }, { payload: taskId }) => {\r\n      const index = tasks.findIndex(({ id }) => id === taskId);\r\n      tasks.splice(index, 1);\r\n    },\r\n    toggleHideDone: state => {\r\n      state.hideDone = !state.hideDone;\r\n    },\r\n    toggleTaskDone: ({ tasks }, { payload: taskId }) => {\r\n      const index = tasks.findIndex(({ id }) => id === taskId);\r\n      tasks[index].done = !tasks[index].done;\r\n    },\r\n    setAllDone: ({ tasks }) => {\r\n      tasks.forEach(task => {\r\n        task.done = true;\r\n      });\r\n    },\r\n    fetchExampleTasks: state => {\r\n      state.loading = true;\r\n    },\r\n    fetchExampleTasksSuccess: (state, { payload: tasks }) => {\r\n      state.tasks = tasks;\r\n      state.loading = false;\r\n    },\r\n    fetchExampleTasksError: state => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addTask,\r\n  removeTask,\r\n  toggleHideDone,\r\n  toggleTaskDone,\r\n  setAllDone,\r\n  fetchExampleTasks,\r\n  fetchExampleTasksSuccess,\r\n  fetchExampleTasksError\r\n} = tasksSlice.actions;\r\n\r\nconst selectTasksState = state => state.tasks;\r\n\r\nexport const selectTasks = state => selectTasksState(state).tasks;\r\nexport const selectHideDone = state => selectTasksState(state).hideDone;\r\nexport const selectAreTaskEmpty = state => selectTasks(state).length === 0;\r\nexport const selectIsEveryTaskDone = state => selectTasks(state).every(({ done }) => done);\r\nexport const selectExampleTaskLoading = state => selectTasksState(state).loading;\r\n\r\nexport const getTaskById = (state, taskId) =>\r\n  selectTasks(state).find(({ id }) => id === taskId);\r\n\r\nexport const selectTaskByQuery = (state, query) => {\r\n  const tasks = selectTasks(state);\r\n\r\n  if (!query || query.trim() === \"\") {\r\n    return tasks;\r\n  }\r\n\r\n  return tasks.filter(({ content }) => content.toUpperCase().includes(query.trim().toUpperCase()));\r\n}\r\n\r\nexport default tasksSlice.reducer;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n  padding: 15px 0px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n      grid-template-columns: 1fr;\r\n      grid-gap: 0px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: ${({ theme }) => theme.color.teal};\r\n  color: ${({ theme }) => theme.color.white};\r\n  padding: 0 20px;\r\n  transition: 0.3s;\r\n  border: none;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n      padding: 10px 0;\r\n  }\r\n\r\n  &:hover {\r\n      filter: brightness(110%);\r\n      transform: scale(1.1);\r\n      cursor: pointer;\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n          transform: scale(1.04);\r\n      }\r\n  }\r\n\r\n  &:active {\r\n      filter: brightness(120%);\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default styled.input`\r\n  padding: 10px;\r\n  flex-grow: 1;\r\n  border: 1px solid ${({ theme }) => theme.color.alto};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n      margin: 10px 0;\r\n  }\r\n`;","import { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { addTask } from \"../../tasksSlice\";\r\nimport { StyledForm, Button } from \"./styled\";\r\nimport Input from \"../Input\";\r\n\r\nconst Form = () => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const inputRef = useRef(null);\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const trimmedNewTaskConetent = newTaskContent.trim();\r\n\r\n    if (!trimmedNewTaskConetent) {\r\n      return;\r\n    }\r\n\r\n    dispatch((addTask({\r\n      content: trimmedNewTaskConetent,\r\n      done: false,\r\n      id: nanoid(),\r\n    })));\r\n\r\n    setNewTaskContent(\"\");\r\n    focusInput();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        value={newTaskContent}\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n        ref={inputRef}\r\n        autoFocus\r\n      />\r\n      <Button onClick={focusInput}>Dodaj zadanie</Button>\r\n    </StyledForm>\r\n  )\r\n};\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n\r\n  @media (max-width:${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n      grid-template-columns: 1fr;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  color: ${({ theme }) => theme.color.teal};\r\n  border-style: none;\r\n  padding: 15px 15px;\r\n  transition: 0.3s;\r\n\r\n  &:hover:not([disabled]) {\r\n      filter: brightness(110%);\r\n      cursor: pointer;\r\n  }\r\n\r\n  &:active:not([disabled]) {\r\n      filter: brightness(120%);\r\n  }\r\n\r\n  &:disabled {\r\n      color: ${({ theme }) => theme.color.silver};\r\n      cursor: not-allowed;\r\n  }\r\n`;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  toggleHideDone,\r\n  setAllDone,\r\n  selectAreTaskEmpty,\r\n  selectIsEveryTaskDone,\r\n  selectHideDone,\r\n  fetchExampleTasks\r\n} from \"../../tasksSlice\"\r\nimport { Wrapper } from \"./styled\";\r\nimport Button from \"../Button\";\r\n\r\nconst Buttons = () => {\r\n  const areTaskEmpty = useSelector(selectAreTaskEmpty);\r\n  const isEveryTaskDone = useSelector(selectIsEveryTaskDone);\r\n  const hideDone = useSelector(selectHideDone);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      {!areTaskEmpty && (\r\n        <>\r\n          <Button\r\n            onClick={() => dispatch(toggleHideDone())}\r\n          >\r\n            {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n          </Button>\r\n          <Button\r\n            onClick={() => dispatch(setAllDone())}\r\n            disabled={isEveryTaskDone}\r\n          >\r\n            Ukończ wszystkie\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\nexport default Buttons;","import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding-left: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-size: 18px;\r\n  padding: 10px;\r\n  border-bottom: solid 1px ${({ theme }) => theme.color.alto};;\r\n  display: flex;\r\n  align-items: center;\r\n  word-break: break-word; \r\n\r\n  ${({ hidden }) => hidden && css`\r\n      display: none;\r\n  `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n  padding: 0px 15px;\r\n  flex-grow: 1;\r\n\r\n  ${({ done }) => done && css`\r\n      text-decoration: line-through;\r\n  `}  \r\n`;\r\n\r\nexport const Button = styled.button`\r\n  color: ${({ theme }) => theme.color.white};\r\n  width: 30px;\r\n  height: 30px;\r\n  border: none;\r\n  justify-self: center;\r\n  transition: 0.3s;\r\n\r\n  ${({ toggleDone }) => toggleDone && css`\r\n      background-color: ${({ theme }) => theme.color.forestGreen};\r\n  `}\r\n\r\n  ${({ remove }) => remove && css`\r\n      background-color: ${({ theme }) => theme.color.crimson};\r\n  `}\r\n\r\n  &:hover {\r\n      filter: brightness(110%);\r\n      cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n      filter: brightness(120%);\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  color:  ${({ theme }) => theme.color.teal}; \r\n  text-decoration: none;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n      filter: brightness(110%);\r\n      cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n      filter: brightness(120%);\r\n  }\r\n`;","const searchQueryParamName = \"szukaj\";\r\nexport default searchQueryParamName;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeTask, toggleTaskDone, selectHideDone, selectTaskByQuery } from \"../../tasksSlice\";\r\nimport { List, Item, Content, Button, StyledLink } from \"./styled\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport searchQueryParamName from \"../searchQueryParamName\";\r\n\r\nconst TasksList = () => {\r\n\r\n  const location = useLocation();\r\n  const query = (new URLSearchParams(location.search)).get(searchQueryParamName);\r\n\r\n  const tasks = useSelector(state => selectTaskByQuery(state, query));\r\n  const hideDone = useSelector(selectHideDone);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <List>\r\n      {tasks.map(task => (\r\n        <Item\r\n          key={task.id}\r\n          hidden={task.done && hideDone}\r\n        >\r\n          <Button\r\n            onClick={() => dispatch(toggleTaskDone(task.id))}\r\n            toggleDone\r\n          >\r\n            <span>{task.done ? \"✔\" : \"\"}</span>\r\n          </Button>\r\n          <Content done={task.done}>\r\n            <StyledLink to={`/zadania/${task.id}`}>{task.content}</StyledLink>\r\n          </Content>\r\n          <Button\r\n            onClick={() => dispatch(removeTask(task.id))}\r\n            remove\r\n          >\r\n            🗑\r\n          </Button>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  )\r\n};\r\n\r\nexport default TasksList;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n`;","import Input from \"../Input\";\r\nimport { Wrapper } from \"./styled\";\r\nimport searchQueryParamName from \"../searchQueryParamName\";\r\nimport { useQueryParameter, useReplaceQueryParameter } from \"../queryParameters\";\r\n\r\nconst Search = () => {\r\n  const query = useQueryParameter(searchQueryParamName);\r\n  const replaceQueryParameter = useReplaceQueryParameter();\r\n\r\n  const onInputChange = ({ target }) => {\r\n    replaceQueryParameter({\r\n      key: searchQueryParamName,\r\n      value: target.value.trim() !== \"\" ? target.value : undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        placeholder=\"Filtruj zadania\"\r\n        value={query || \"\"}\r\n        onChange={onInputChange}\r\n      />\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\nexport default Search;","import { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport const useQueryParameter = key => {\r\n  const location = useLocation();\r\n  const query = (new URLSearchParams(location.search)).get(key);\r\n  return query;\r\n};\r\n\r\nexport const useReplaceQueryParameter = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  return ({ key, value }) => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n\r\n    if (value === undefined) {\r\n      searchParams.delete(key);\r\n    } else {\r\n      searchParams.set(key, value);\r\n    }\r\n\r\n    history.push(`${location.pathname}?${searchParams.toString()}`);\r\n  };\r\n};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectExampleTaskLoading, fetchExampleTasks } from \"../../tasksSlice\";\r\nimport Button from \"../Button\";\r\n\r\nconst ExampleTaskButton = () => {\r\n  const loading = useSelector(selectExampleTaskLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Button\r\n      onClick={() => dispatch(fetchExampleTasks())}\r\n      disabled={loading}\r\n    >\r\n      {loading ? \"Ładowanie...\" : \"Pobierz przykładowe zadania\"}\r\n    </Button>\r\n  )\r\n};\r\n\r\nexport default ExampleTaskButton;","import { useDispatch } from \"react-redux\";\nimport { Wrapper } from \"../../../styled.js\";\nimport Header from \"../../../common/Header\";\nimport Section from \"../../../common/Section\";\nimport Form from \"./Form\";\nimport Buttons from \"./Buttons\";\nimport TasksList from \"./TasksList\";\nimport Search from \"./Search/index.js\";\nimport ExampleTaskButton from \"./ExampleTaskButton\";\n\nfunction TasksPage() {\n  return (\n    <Wrapper>\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        extraHeaderContent={\n          <ExampleTaskButton />\n        }\n        body={<Form />}\n      />\n      <Section\n        title=\"Wyszukiwarka\"\n        body={<Search />}\n      />\n      <Section\n        title=\"Lista zadań\"\n        extraHeaderContent={<Buttons />}\n        body={<TasksList />}\n      />\n    </Wrapper>\n  );\n}\n\nexport default TasksPage;","import { useParams } from \"react-router-dom\";\r\nimport { Wrapper } from \"../../../styled.js\";\r\nimport Header from \"../../../common/Header\";\r\nimport Section from \"../../../common/Section\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTaskById } from \"../tasksSlice.js\";\r\n\r\nfunction TaskPage() {\r\n  const { id } = useParams();\r\n  const task = useSelector(state => getTaskById(state, id));\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header title=\"Szczegóły zadania\" />\r\n      <Section\r\n        title={task ? task.content : \" Nie znaleziono zadania... \"}\r\n        body={\r\n          task ? <> <strong>Ukończono: </strong> {task.done ? \"Tak\" : \"Nie\"} </> : \"\"\r\n        }\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default TaskPage;","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport AuthorPage from \"./features/author/AuthorPage\";\r\nimport TasksPage from \"./features/tasks/TasksPage/index.js\";\r\nimport TaskPage from \"./features/tasks/TaskPage\";\r\nimport { StyledNavLink, Wrapper, List, Item } from \"./styled\";\r\n\r\nconst App = () => (\r\n  <HashRouter>\r\n    <nav>\r\n      <List>\r\n        <Item>\r\n          <StyledNavLink to=\"/zadania\">Zadania</StyledNavLink>\r\n        </Item>\r\n        <Item>\r\n          <StyledNavLink to=\"/author\">O autorze</StyledNavLink>\r\n        </Item>\r\n      </List>\r\n      <Switch>\r\n        <Route path=\"/zadania/:id\">\r\n          <TaskPage />\r\n        </Route>\r\n        <Route path=\"/zadania\">\r\n          <TasksPage />\r\n        </Route>\r\n        <Route path=\"/author\">\r\n          <AuthorPage />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/zadania\" />\r\n        </Route>\r\n      </Switch>\r\n    </nav>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    background-color: ${({ theme }) => theme.color.gallery};\r\n  }\r\n`;","export const getExampleTasks = async () => {\r\n  const response = await fetch(\"/taskList-react/exampleTasks.json\");\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  return await response.json();\r\n};","import { takeLatest, call, put, delay, takeEvery, select } from \"redux-saga/effects\";\r\nimport {\r\n  fetchExampleTasks,\r\n  selectTasks,\r\n  fetchExampleTasksSuccess,\r\n  fetchExampleTasksError\r\n} from \"./tasksSlice\";\r\nimport { getExampleTasks } from \"./getExampleTasks\";\r\nimport { saveTasksInLocalStorage } from \"./localeStorage\";\r\n\r\nfunction* fetchExampleTasksHandler() {\r\n  try {\r\n    yield delay(1000);\r\n    const exampleTasks = yield call(getExampleTasks);\r\n    yield put(fetchExampleTasksSuccess(exampleTasks));\r\n  } catch (error) {\r\n    yield put(fetchExampleTasksError());\r\n    yield call(alert, \"Przykładowe zadania nie zostały pobrane prawidłowo... Proszę, odśwież stronę i spróbuj ponownie.\");\r\n  }\r\n}\r\n\r\nfunction* saveTaskInLocalStorageHandler() {\r\n  const tasks = yield select(selectTasks);\r\n  yield call(saveTasksInLocalStorage, tasks);\r\n}\r\n\r\nexport function* tasksSaga() {\r\n  yield takeLatest(fetchExampleTasks.type, fetchExampleTasksHandler);\r\n  yield takeEvery(\"*\", saveTaskInLocalStorageHandler)\r\n}","import { all } from \"redux-saga/effects\";\r\nimport { tasksSaga } from \"./features/tasks/tasksSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    tasksSaga(),\r\n  ]);\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./rootSaga\";\r\nimport tasksReducer from './features/tasks/tasksSlice';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    tasks: tasksReducer,\r\n  },\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from \"react-redux\";\nimport { theme } from \"./theme\";\nimport { GlobalStyle } from \"./globalStyle\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","export const theme = {\r\n  color: {\r\n      black: \"#000\",\r\n      silver: \"#ccc\",\r\n      alto: \"#ddd\",\r\n      gallery: \"$eee\",\r\n      crimson: \"#db143c\",\r\n      white: \"#fff\",\r\n      teal: \"#008080\",\r\n      forestGreen: \"#228c22\",\r\n  },\r\n  breakPoint: {\r\n      mobileMax: 767,\r\n  },\r\n};"],"sourceRoot":""}