{"version":3,"sources":["Header/styled.js","Header/index.js","Form/styled.js","Form/index.js","Buttons/styled.js","Buttons/index.js","Tasks/styled.js","Tasks/index.js","Section/styled.js","Section/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","globalStyle.js","index.js","theme.js"],"names":["MainHeader","styled","header","Header","title","StyledForm","form","theme","breakPoint","mobileMax","Input","input","color","alto","Button","button","teal","white","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","focusInput","current","focus","onSubmit","event","preventDefault","trimmedNewTaskConetent","trim","value","placeholder","onChange","target","ref","onClick","Wrapper","div","silver","Buttons","tasks","hideDone","toggleHideDone","setAllDone","length","disabled","every","done","List","ul","Item","li","hidden","css","Content","span","toggleDone","forestGreen","remove","crimson","Tasks","removeTask","toggleTaskDone","map","task","id","content","SectionWrapper","section","Title","h2","Body","Section","extraHeaderContent","body","AppContainer","Container","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","gallery","ReactDOM","render","StrictMode","black","document","getElementById"],"mappings":"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","file":"static/js/main.65711468.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MainHeader = styled.header`\r\n    margin: 10px 0;\r\n`;","import { MainHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <MainHeader>\r\n    <h1>{title}</h1>\r\n  </MainHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: flex;\r\n    padding: 15px 0px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    flex-grow: 1;\r\n    margin-right: 15px;\r\n    border: 1px solid ${({ theme }) => theme.color.alto};\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n        margin: 10px 0;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: ${({ theme }) => theme.color.teal};\r\n    color: ${({ theme }) => theme.color.white};\r\n    padding: 0 20px;\r\n    transition: 0.3s;\r\n    border: none;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n        padding: 10px 0;\r\n    }\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n        transform: scale(1.1);\r\n        cursor: pointer;\r\n\r\n        @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n            transform: scale(1.04);\r\n        }\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import { useState, useRef } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n};\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const trimmedNewTaskConetent = newTaskContent.trim();\r\n\r\n    if (!trimmedNewTaskConetent) {\r\n      return;\r\n    }\r\n\r\n    addNewTask(trimmedNewTaskConetent);\r\n    setNewTaskContent(\"\");\r\n    focusInput();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        value={newTaskContent}\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n        ref={inputRef}\r\n      />\r\n      <Button onClick={focusInput}>Dodaj zadanie</Button>\r\n    </StyledForm>\r\n  )\r\n};\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n\r\n    @media (max-width:${({theme}) => theme.breakPoint.mobileMax }px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: ${({theme}) => theme.color.white};\r\n    color: ${({theme}) => theme.color.teal};\r\n    border-style: none;\r\n    padding: 15px 15px;\r\n    transition: 0.3s;\r\n\r\n    &:hover:not([disabled]) {\r\n        filter: brightness(110%);\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active:not([disabled]) {\r\n        filter: brightness(120%);\r\n    }\r\n\r\n    &:disabled {\r\n        color: ${({theme}) => theme.color.silver};\r\n        cursor: not-allowed;\r\n    }\r\n`;","import { Wrapper, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  tasks.length > 0 && (\r\n    <Wrapper>\r\n      <Button\r\n        onClick={toggleHideDone}\r\n      >\r\n        {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n      </Button>\r\n      <Button\r\n        onClick={setAllDone}\r\n        disabled={tasks.every(({ done }) => done)}\r\n      >\r\n        Ukończ wszystkie\r\n      </Button>\r\n    </Wrapper>\r\n  )\r\n);\r\n\r\nexport default Buttons;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding-left: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    font-size: 18px;\r\n    padding: 10px;\r\n    border-bottom: solid 1px ${({ theme }) => theme.color.alto};;\r\n    display: flex;\r\n    align-items: center;\r\n    word-break: break-word; \r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    padding: 0px 15px;\r\n    flex-grow: 1;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}  \r\n`;\r\n\r\nexport const Button = styled.button`\r\n    color: ${({ theme }) => theme.color.white};\r\n    width: 30px;\r\n    height: 30px;\r\n    border: none;\r\n    justify-self: center;\r\n    transition: 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background-color: ${({ theme }) => theme.color.forestGreen};\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: ${({ theme }) => theme.color.crimson};\r\n    `}\r\n\r\n    &:hover {\r\n            filter: brightness(110%);\r\n            cursor: pointer;\r\n        }\r\n\r\n        &:active {\r\n            filter: brightness(120%);\r\n        }\r\n`;","import { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map(task => (\r\n      <Item\r\n        key={task.id}\r\n        hidden={task.done && hideDone}\r\n      >\r\n        <Button\r\n          onClick={() => toggleTaskDone(task.id)}\r\n          toggleDone\r\n        >\r\n          <span>{task.done ? \"✔\" : \"\"}</span>\r\n        </Button>\r\n        <Content done={task.done}>\r\n          {task.content}\r\n        </Content>\r\n        <Button\r\n          onClick={() => removeTask(task.id)}\r\n          remove\r\n        >\r\n          🗑\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const SectionWrapper = styled.section`\r\n    margin: 10px 0;\r\n    background: ${({ theme }) => theme.color.white};\r\n    box-shadow:  0 0 5px ${({ theme }) => theme.color.alto};;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.alto};;\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    \r\n    @media (max-width: ${({ theme }) => theme.breakPoint.mobileMax}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 20px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;","import { SectionWrapper, Header, Title, Body } from \"./styled\";\r\n\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n  <SectionWrapper>\r\n    <Header>\r\n      <Title>{title}</Title>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <Body>\r\n      {body}\r\n    </Body>\r\n  </SectionWrapper>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const AppContainer = styled.div`\r\n    max-width: 900px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n`;","import { AppContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n  <AppContainer>\r\n    {children}\r\n  </AppContainer>\r\n);\r\n\r\nexport default Container;","import { useState } from \"react\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Buttons from \"./Buttons\";\nimport Tasks from \"./Tasks\";\nimport Section from \"./Section\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const {\n    tasks, \n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <Container>\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={\n          <Form\n            addNewTask={addNewTask}\n          />\n        }\n      />\n      <Section\n        title=\"Lista zadań\"\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />}\n      />\n    </Container>\n  );\n}\n\nexport default App;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(\r\n        JSON.parse(localStorage.getItem(\"tasks\")) ||\r\n        [\r\n            { id: 1, content: \"przejść na Reacta\", done: false },\r\n            { id: 2, content: \"zjeść śniadanie\", done: true },\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    });\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(tasks => tasks.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return {\r\n                    ...task,\r\n                    done: !task.done,\r\n                };\r\n            }\r\n            return task;\r\n        }));\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })))\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n                content,\r\n                done: false,\r\n            }\r\n        ])\r\n    };\r\n\r\n    return { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Montserrat', sans-serif;\r\n        background-color: ${({ theme }) => theme.color.gallery};\r\n    }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from \"./theme\";\nimport { GlobalStyle } from \"./globalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        black: \"#000\",\r\n        silver: \"#ccc\",\r\n        alto: \"#ddd\",\r\n        gallery: \"$eee\",\r\n        crimson: \"#db143c\",\r\n        white: \"#fff\",\r\n        teal: \"#008080\",\r\n        forestGreen: \"#228c22\",\r\n    },\r\n    breakPoint: {\r\n        mobileMax: 767,\r\n    },\r\n};"],"sourceRoot":""}